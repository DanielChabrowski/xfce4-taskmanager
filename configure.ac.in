dnl
dnl xfce4-taskmanager - A small taskmanager based on the Xfce 4 libraries.
dnl
dnl 2005-2007 Johannes Zellner <webmaster@nebulon.de>
dnl 2010 Mike Massonnet <mmassonnet@xfce.org>

dnl ***************************
dnl *** Version information ***
dnl ***************************
m4_define([taskmanager_version_major], [0])
m4_define([taskmanager_version_minor], [5])
m4_define([taskmanager_version_micro], [91])
m4_define([taskmanager_version_build], [@REVISION@])
m4_define([taskmanager_version_tag], [git])
m4_define([taskmanager_version], [taskmanager_version_major().taskmanager_version_minor().taskmanager_version_micro()ifelse(taskmanager_version_tag(), [git], [taskmanager_version_tag()-taskmanager_version_build()], [taskmanager_version_tag()])])

dnl ***************************
dnl *** Initialize autoconf ***
dnl ***************************
AC_COPYRIGHT([Copyright (c) 2006-2008
        The Xfce development team. All rights reserved.])
AC_INIT([Xfce4 Taskmanager], [taskmanager_version], [http://bugzilla.xfce.org/], [xfce4-taskmanager],
        [http://goodies.xfce.org/projects/applications/xfce4-taskmanager])
AC_PREREQ([2.50])
AC_CANONICAL_TARGET()
AC_REVISION([taskmanager_version_build])

dnl ***************************
dnl *** Initialize automake ***
dnl ***************************
AM_INIT_AUTOMAKE([1.8 dist-bzip2])
AM_CONFIG_HEADER([config.h])
AM_MAINTAINER_MODE()
m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])

dnl ********************************
dnl *** Check for basic programs ***
dnl ********************************
AC_PROG_CC()
AM_PROG_CC_C_O()
AC_PROG_LD()
AC_PROG_INSTALL()
AC_PROG_LIBTOOL()
AC_PROG_INTLTOOL()

dnl ************************************
dnl *** Checks for library functions ***
dnl ************************************
AC_DISABLE_STATIC()
AC_C_CONST()

dnl **********************************
dnl *** Check for standard headers ***
dnl **********************************
AC_HEADER_STDC()

dnl ******************************
dnl *** Check for i18n support ***
dnl ******************************
XDT_I18N([@LINGUAS@])

dnl ***********************************
dnl *** Check for required packages ***
dnl ***********************************
XDT_CHECK_PACKAGE([GTK], [gtk+-2.0], [2.12.0])

dnl ***********************************
dnl ******* Check for OS family *******
dnl ***********************************
case "$target_os" in
	freebsd*)
		AC_MSG_ERROR([Support for FreeBSD is missing])
	;;
	dragonfly*|netbsd*|openbsd*|darwin*)
		ac_os_implementation="bsd"
	;;
	solaris*)
		ac_os_implementation="solaris"
		AC_CHECK_LIB([kstat], [kstat_open])
	;;
	linux*)
		ac_os_implementation="linux"
		AC_CHECK_HEADERS([pwd.h signal.h stdio.h string.h sys/resource.h \
				sys/stat.h sys/types.h unistd.h])
	;;
	*)
		AC_MSG_CHECKING([for OS implementation])
		AC_MSG_ERROR([no OS implementation for $target_os is available])
	;;
esac
AC_MSG_CHECKING([for OS implementation])
AC_MSG_RESULT([$ac_os_implementation])

AM_CONDITIONAL([OS_BSD], [test x"$ac_os_implementation" = x"bsd"])
AM_CONDITIONAL([OS_SOLARIS], [test x"$ac_os_implementation" = x"solaris"])
AM_CONDITIONAL([OS_LINUX], [test x"$ac_os_implementation" = x"linux"])

dnl ***********************************
dnl *** Check for debugging support ***
dnl ***********************************
XDT_FEATURE_DEBUG()

dnl ***************
dnl *** Outputs ***
dnl ***************
AC_OUTPUT([
Makefile
src/Makefile
po/Makefile.in
])

dnl ***************************
dnl *** Print configuration ***
dnl ***************************
echo
echo "Build Configuration:"
echo
echo "* Target OS:     $target_os ($ac_os_implementation)"
echo "* Debug Support: $enable_debug"
echo

